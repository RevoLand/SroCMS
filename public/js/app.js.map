{"version":3,"sources":["webpack:///./resources/js/core/Errors.js","webpack:///./resources/js/core/Form.js","webpack:///./resources/js/app.js"],"names":["Errors","this","errors","field","hasOwnProperty","Object","keys","length","Form","data","originalData","property","clear","url","submit","Promise","resolve","reject","swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","requestType","$","block","axios","response","onSuccess","error","onFail","unblock","html","message","record","errorsHtml","jQuery","each","key","window","_","Vue","Swal","is","dayjs","defaults","headers","common","filter","format","String","use","VModal","dynamic"],"mappings":"odA4DeA,E,WAxDX,c,4FAAc,SACVC,KAAKC,OAAS,G,mDAQdC,GACA,OAAOF,KAAKC,OAAOE,eAAeD,K,4BAOlC,OAAOE,OAAOC,KAAKL,KAAKC,QAAQK,OAAS,I,0BAQzCJ,GACA,GAAIF,KAAKC,OAAOC,GACZ,OAAOF,KAAKC,OAAOC,GAAO,K,6BAS3BD,GACHD,KAAKC,OAASA,I,4BAQZC,GACEA,SACOF,KAAKC,OAAOC,GAKvBF,KAAKC,OAAS,Q,0MCmGPM,E,WAnJX,WAAYC,GAGR,IAAK,IAAIN,K,4FAHK,SACdF,KAAKS,aAAeD,EAEFA,EACdR,KAAKE,GAASM,EAAKN,GAGvBF,KAAKC,OAAS,IAAIF,E,sDAOlB,IAAIS,EAAO,GAEX,IAAK,IAAIE,KAAYV,KAAKS,aACtBD,EAAKE,GAAYV,KAAKU,GAG1B,OAAOF,I,8BAOP,IAAK,IAAIN,KAASF,KAAKS,aACnBT,KAAKE,GAASF,KAAKS,aAAaP,GAGpCF,KAAKC,OAAOU,U,2BAQXC,GACD,OAAOZ,KAAKa,OAAO,OAAQD,K,0BAQ3BA,GACA,OAAOZ,KAAKa,OAAO,MAAOD,K,4BAQxBA,GACF,OAAOZ,KAAKa,OAAO,QAASD,K,6BAQzBA,GAAK,WACR,OAAO,IAAIE,SAAQ,SAACC,EAASC,GACzBC,KAAKC,KAAK,CACNC,MAAO,gBACPC,KAAM,oCACNC,KAAM,UACNC,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBACpBC,MAAK,SAACC,GACAA,EAAOC,MAIZb,EAAQ,EAAKF,OAAO,SAAUD,IAH1BI,EAAO,4B,6BAchBa,EAAajB,GAAK,WACrB,OAAO,IAAIE,SAAQ,SAACC,EAASC,GACzBc,EAAE,YAAYC,QACdC,MAAMH,GAAajB,EAAK,EAAKJ,QACxBkB,MAAK,SAACO,GACH,EAAKC,UAAUD,EAASzB,MAExBO,EAAQkB,EAASzB,SAJzB,OAMW,SAAC2B,GACJ,EAAKC,OAAOD,EAAMF,SAASzB,KAAKP,QAChCe,EAAOmB,EAAMF,SAASzB,SAR9B,SAUa,WACLsB,EAAE,YAAYO,kB,gCAUpB7B,GACNS,KAAKC,KAAK,CACNC,MAAOX,EAAKW,MACZmB,KAAM9B,EAAK+B,QACXlB,KAAMb,EAAKa,S,6BASZpB,GACHD,KAAKC,OAAOuC,OAAOvC,GACnB,IAAIwC,EAAa,6BAEjBC,OAAOC,KAAK1C,GAAQ,SAAU2C,EAAKhB,GAC/Ba,GAAc,OACdA,GAAcb,EACda,GAAc,WAElBA,GAAc,QACdxB,KAAKC,KAAK,CACNG,KAAM,QACNF,MAAOlB,EAAOsC,QACdD,KAAMG,S,qDC5IlBI,OAAOC,EAAIA,IACXD,OAAOb,MAAQA,IACfa,OAAOE,IAAMA,IACbF,OAAO5B,KAAO4B,OAAOG,KAAO/B,IAC5B4B,OAAOI,GAAKA,IACZJ,OAAOK,MAAQA,IACfL,OAAOf,EAAIe,OAAOH,OAASA,IAC3BG,OAAOtC,KAAOA,EAEdsC,OAAOb,MAAMmB,SAASC,QAAQC,OAAO,oBAAsB,iBAG3DR,OAAOE,IAAIO,OAAO,cAAc,SAAS1B,EAAO2B,GAC5C,GAAI3B,EACA,OAAOsB,IAAMM,OAAO5B,IAAQ2B,OAAOA,GAAU,0BAKrDV,OAAOE,IAAIU,IAAIC,IAAQ,CAAEC,SAAS,K","file":"/js/app.js","sourcesContent":["class Errors {\n    /**\n     * Create a new Errors instance.\n     */\n    constructor() {\n        this.errors = {};\n    }\n\n    /**\n     * Determine if an errors exists for the given field.\n     *\n     * @param {string} field\n     */\n    has(field) {\n        return this.errors.hasOwnProperty(field);\n    }\n\n    /**\n     * Determine if we have any errors.\n     */\n    any() {\n        return Object.keys(this.errors).length > 0;\n    }\n\n    /**\n     * Retrieve the error message for a field.\n     *\n     * @param {string} field\n     */\n    get(field) {\n        if (this.errors[field]) {\n            return this.errors[field][0];\n        }\n    }\n\n    /**\n     * Record the new errors.\n     *\n     * @param {object} errors\n     */\n    record(errors) {\n        this.errors = errors;\n    }\n\n    /**\n     * Clear one or all error fields.\n     *\n     * @param {string|null} field\n     */\n    clear(field) {\n        if (field) {\n            delete this.errors[field];\n\n            return;\n        }\n\n        this.errors = {};\n    }\n}\n\nexport default Errors;\n","import Errors from \"./Errors\";\n\nclass Form {\n    /**\n     * Create a new Form instance.\n     *\n     * @param {object} data\n     */\n    constructor(data) {\n        this.originalData = data;\n\n        for (let field in data) {\n            this[field] = data[field];\n        }\n\n        this.errors = new Errors();\n    }\n\n    /**\n     * Fetch all relevant data for the form.\n     */\n    data() {\n        let data = {};\n\n        for (let property in this.originalData) {\n            data[property] = this[property];\n        }\n\n        return data;\n    }\n\n    /**\n     * Reset the form fields.\n     */\n    reset() {\n        for (let field in this.originalData) {\n            this[field] = this.originalData[field];\n        }\n\n        this.errors.clear();\n    }\n\n    /**\n     * Send a POST request to the given URL.\n     * .\n     * @param {string} url\n     */\n    post(url) {\n        return this.submit(\"post\", url);\n    }\n\n    /**\n     * Send a PUT request to the given URL.\n     * .\n     * @param {string} url\n     */\n    put(url) {\n        return this.submit(\"put\", url);\n    }\n\n    /**\n     * Send a PATCH request to the given URL.\n     * .\n     * @param {string} url\n     */\n    patch(url) {\n        return this.submit(\"patch\", url);\n    }\n\n    /**\n     * Send a DELETE request to the given URL.\n     * .\n     * @param {string} url\n     */\n    delete(url) {\n        return new Promise((resolve, reject) => {\n            swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\",\n            }).then((result) => {\n                if (!result.value) {\n                    reject(\"Canceled by User\");\n                    return;\n                }\n                resolve(this.submit(\"delete\", url));\n            });\n        });\n    }\n\n    /**\n     * Submit the form.\n     *\n     * @param {string} requestType\n     * @param {string} url\n     */\n    submit(requestType, url) {\n        return new Promise((resolve, reject) => {\n            $(\".content\").block();\n            axios[requestType](url, this.data())\n                .then((response) => {\n                    this.onSuccess(response.data);\n\n                    resolve(response.data);\n                })\n                .catch((error) => {\n                    this.onFail(error.response.data.errors);\n                    reject(error.response.data);\n                })\n                .finally(() => {\n                    $(\".content\").unblock();\n                });\n        });\n    }\n\n    /**\n     * Handle a successful form submission.\n     *\n     * @param {object} data\n     */\n    onSuccess(data) {\n        swal.fire({\n            title: data.title,\n            html: data.message,\n            icon: data.icon,\n        });\n    }\n\n    /**\n     * Handle a failed form submission.\n     *\n     * @param {object} errors\n     */\n    onFail(errors) {\n        this.errors.record(errors);\n        var errorsHtml = '<ul class=\"list-unstyled\">';\n\n        jQuery.each(errors, function (key, value) {\n            errorsHtml += \"<li>\";\n            errorsHtml += value;\n            errorsHtml += \"</li>\";\n        });\n        errorsHtml += \"</ul>\";\n        swal.fire({\n            icon: \"error\",\n            title: errors.message,\n            html: errorsHtml,\n        });\n    }\n}\n\nexport default Form;\n","import Vue from \"vue\";\nimport axios from \"axios\";\nimport _ from \"lodash-core\";\nimport swal from \"sweetalert2\";\nimport is from \"is_js\";\nimport jQuery from \"jquery\";\nimport dayjs from \"dayjs\";\nimport Form from \"./core/Form\";\nimport VModal from 'vue-js-modal'\n\nwindow._ = _;\nwindow.axios = axios;\nwindow.Vue = Vue;\nwindow.swal = window.Swal = swal;\nwindow.is = is;\nwindow.dayjs = dayjs;\nwindow.$ = window.jQuery = jQuery;\nwindow.Form = Form;\n\nwindow.axios.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\n// Vuejs custom filters\nwindow.Vue.filter('formatDate', function(value, format) {\n    if (value) {\n        return dayjs(String(value)).format(format || 'DD MMMM YY hh:mm:ss');\n    }\n});\n\n// Vuejs custom components\nwindow.Vue.use(VModal, { dynamic: true });\n"],"sourceRoot":""}